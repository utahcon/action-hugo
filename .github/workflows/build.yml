name: Hugo Builder

on:
  push:
    branch:
      - build

jobs:
  checkout_action_hugo:
    name: Checkout action-hugo
    runs-on: ubuntu-latest
    steps:
      - id: check_out_the_repo
        name: Check out the repo
        uses: actions/checkout@v2.3.1

  build_version:
    name: Get action-hugo build version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        name: Get Version
        run: |
          VERSION=$(cat BUILD_VERSION)
          echo "::set-output name=version::${VERSION}"

  checkout_hugo:
    name: Checkout Hugo
    runs-on: ubuntu-latest
    steps:
      - id: check_out_the_repo
        name: Check out the repo
        uses: actions/checkout@v2.3.1
        with:
          repository: gohugoio/hugo
          submodules: true # Fetch Hugo
          fetch-depth: 0   # Fetch all history for .GitInfo and Lastmod

  build_hugo:
    name: Build Hugo
    runs-on: ubuntu-latest
    needs: build_version
    steps:
      - id: build_hugo
        name: Build Hugo
        run: |
          cd hugo || exit
          git checkout ${{ needs.build_version.outputs.version }}
          go install --tags extended
          mv $HOME/go/bin/hugo .
          chmod +x hugo

  transform_action_yml:
    name: Transform action.yml
    runs-on: ubuntu-latest
    needs: checkout_action
    steps:
      - id: create_action_yml
        name: Create action.yml
        run: |
          VERSION=$(cat BUILD_VERSION)
          sed "s/%%version%%/${BUILD_VERSION}/" action.yml.tmp > action.yml
          git add action.yml
          git commit -m "Updating action.yml with version ${VERSION}"

  create_new_branch:
    name: Create New Branch
    runs-on: ubuntu-latest
    needs: transform_action_yml
    steps:
      - id: create_new_version_branch
        name: Create new version branch
        run: |
          echo "Cleaning branches"
          for BRANCH in $(git branch -r); do
            echo "Checking $BRANCH against origin/${{ needs.checkout_and_build_hugo.outputs.version }}"
            if [ $BRANCH == "origin/${{ needs.checkout_and_build_hugo.outputs.version }}" ]; then
              echo git push origin :refs/tags/${{ needs.checkout_and_build_hugo.outputs.version  }}
              git push origin :refs/tags/${{ needs.checkout_and_build_hugo.outputs.version  }}
              echo git push origin :${{ needs.checkout_and_build_hugo.outputs.version }}
              git push origin :${{ needs.checkout_and_build_hugo.outputs.version }}
            fi
          done

          echo "Creating branch: ${{ needs.checkout_and_build_hugo.outputs.version }}"
          echo git checkout -b ${{ needs.checkout_and_build_hugo.outputs.version }}
          git checkout -b ${{ needs.checkout_and_build_hugo.outputs.version }}

          echo "Cleaning tags"
          for TAG in $(git tag); do
            if [ $TAG == "${{ needs.checkout_and_build_hugo.outputs.version }}" ]; then
              echo git push origin :refs/tags/${{ needs.checkout_and_build_hugo.outputs.version }}
              git push origin :refs/tags/${{ needs.checkout_and_build_hugo.outputs.version }}
            fi
          done

          echo "Moving git tag latest"
          git push origin :refs/tags/latest
          git tag -af latest -m "Version ${{ needs.checkout_and_build_hugo.outputs.version }}"

          echo "Pushing branch and tags"
          git push origin ${{ needs.checkout_and_build_hugo.outputs.version }} --tags

      - id: download_hugo_artifact
        name: Download Hugo artifact
        uses: actions/download-artifact@v2
        with:
          name: hugo

      - id: chmod_hugo_artifact
        name: chmod Hugo artifact
        run: |
          chmod +x hugo
          ./hugo version

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: utahcon/hugo
          dockerfile: Containerfile
          tags: latest,${{ needs.checkout_and_build_hugo.outputs.version }}