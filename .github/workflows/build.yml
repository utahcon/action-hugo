name: Build action-hugo

on:
  push:
    branches:
      - build

jobs:
  checkout_action:
    name: Checkout action-hugo
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - id: version
        name: Get build version
        run: |
          VERSION=$(cat BUILD_VERSION)
          echo "::set-output name=version::${VERSION}"

      - name: Fetch all
        run: git fetch --all

      - name: Remove conflicting tags
        run: |
          for T in $(git tag); do
            if [ "${T}" == "${{ steps.version.outputs.version }}" ]; then
              git push origin :refs/tags/${{ steps.version.outputs.version }}
            fi
          done

      - name: Remove conflicting branches
        run: |
          for B in $(git branch -r); do
            if [ "${B}" == "origin/release-${{ steps.version.outputs.version }}" ]; then
              git push origin :release-${{ steps.version.outputs.version }}
            fi
          done

      - name: Identify
        run: |
          git config --global user.email "github@utahcon.com"
          git config --global user.name "Adam Barrett"

      - name: Create and checkout release branch
        run: |
          git checkout -b release-${{ steps.version.outputs.version }}

      - name: Create and commit action.yml
        run: |
          function trim_left {
            # shellcheck disable=SC2001
            echo "${1}" | sed -e "s/^\s*//"
          }

          YML_INPUTS=""
          YML_ARGS=""
          ENTRY=""
          IFS=$'\n'
          START="\${{"
          END="}}"

          COUNT=1

          for FLAG in $(hugo --help | grep "^\s*-.*"); do
          #  echo -e "\n"
            FLAG=$(trim_left "${FLAG}")
          #  echo "'${FLAG}'"

            # Get Short Flag
            SHORT=${FLAG%%--*}
            SHORT=$(trim_left "${SHORT}")
          #  echo "Short:1:2 ${SHORT:1:1}"
            FLAG=${FLAG#*--}

            # Get Long Flag
            FLAG=$(trim_left "${FLAG}")
            LONG=${FLAG%% *}
            LONG=$(trim_left "${LONG}")
          #  echo "Long: '${LONG}'"

            FLAG=${FLAG#* }
            ARG=${FLAG%% *}
          #  echo "Arg: '${ARG}'"

            FLAG=${FLAG#* }
            DESC=$(trim_left "${FLAG}")
          #  echo "Desc: '${DESC}'"

            YML_INPUTS+="\n  ${LONG}\:\n    description\: ${DESC}\n    required\: false"
            YML_ARGS+="\n    - ${START} inputs.${LONG} ${END}"
            ENTRY+="\n      ${COUNT}) ARGUMENTS+=\"--${LONG} \${1} \";;"

            ((COUNT=COUNT+1))
          done

          sed -e "s;%%INPUTS%%;${YML_INPUTS};" action.yml.tmp > action.yml.tmp2
          sed -e "s/%%ARGS%%/${YML_ARGS}/" action.yml.tmp2 > action.yml
          sed -e "s/%%ENTRY%%/${ENTRY}/" entrypoint.sh.tmp > entrypoint.sh

          git add action.yml entrypoint.sh
          git commit -m "Updating action.yml with version ${{ steps.version.outputs.version }}"

      - name: Create version tag
        run: |
          git tag -af ${{ steps.version.outputs.version }} -m "Version ${{ steps.version.outputs.version }}"

      - name: Push release branch and tags
        run: |
          git push origin release-${{ steps.version.outputs.version }} --tags --force

      - uses: actions/upload-artifact@v2
        with:
          name: action-hugo
          path: .

  checkout_hugo:
    name: Checkout and build Hugo
    runs-on: ubuntu-latest
    needs: checkout_action
    steps:
      - name: Checkout hugo
        uses: actions/checkout@v2.3.1
        with:
          repository: gohugoio/hugo
          submodules: true
          fetch-depth: 0

      - name: Build hugo
        run: |
          git checkout ${{ needs.checkout_action.outputs.version }}
          go install --tags extended
          mv $HOME/go/bin/hugo .
          chmod +x hugo

      - uses: actions/upload-artifact@v2
        with:
          name: hugo
          path: hugo

  build_and_push_container:
    name: Build and push action-hugo container
    runs-on: ubuntu-latest
    needs:
      - checkout_action
      - checkout_hugo
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: action-hugo
          path: .

      - uses: actions/download-artifact@v2
        with:
          name: hugo
          path: .

      - run: chmod +x hugo
      - run: chmod +x entrypoint.sh

      - uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: utahcon/hugo
          dockerfile: Containerfile
          tags: ${{ needs.checkout_action.outputs.version }}
